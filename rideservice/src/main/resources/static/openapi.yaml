openapi: 3.0.3
info:
  title: Ride Service API
  version: 1.0.0
  description: RESTful API for managing rides.

servers:
  - url: http://localhost:8081
    description: Local dev server

paths:
  /api/rides:
    get:
      summary: Get all rides
      operationId: getAllRides
      responses:
        '200':
          description: A list of rides
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RideDto'
    post:
      summary: Create a new ride
      operationId: createRide
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RideDto'
      responses:
        '201':
          description: Ride created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RideDto'

  /api/rides/{id}:
    get:
      summary: Get a ride by ID
      operationId: getRideById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ride found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RideDto'
        '404':
          description: Ride not found

    delete:
      summary: Delete a ride
      operationId: deleteRide
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Ride deleted

    patch:
      summary: Update ride partially
      operationId: updateRide
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: Ride updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RideDto'

  /api/rides/page:
    get:
      summary: Get paginated rides
      operationId: getRidesByPage
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: size
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Page of rides
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/RideDto'
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer
                  number:
                    type: integer

components:
  schemas:
    RideDto:
      type: object
      properties:
        id:
          type: string
        passengerName:
          type: string
        driverName:
          type: string
        origin:
          type: string
        destination:
          type: string
        status:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
